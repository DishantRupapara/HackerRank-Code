#!/bin/python3

import os
import sys

#
# Complete the 'permutationEquation' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts INTEGER_ARRAY p as parameter.
#

def permutationEquation(p):
    n = len(p)
    
    # Step 1: Build inverse mapping (1-based index)
    pos = [0] * (n + 1)
    for i in range(n):
        pos[p[i]] = i + 1   # store index+1 since permutation is 1-based
    
    result = []
    # Step 2: Apply equation p[p[y]] = x
    for x in range(1, n+1):
        y = pos[x]      # find y such that p[y] = x
        z = pos[y]      # then find z such that p[z] = y
        result.append(z)
    
    return result


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())
    p = list(map(int, input().rstrip().split()))

    result = permutationEquation(p)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
